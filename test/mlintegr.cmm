(data int 3072 global "camlMlintegr" "camlMlintegr": skip 24)
(data int 2295 "camlMlintegr__4": addr "camlMlintegr__test_1022" int 3)
(data
 int 3319
 "camlMlintegr__5":
 addr "caml_curry4"
 int 9
 addr "camlMlintegr__integr_1012")
(data int 2295 "camlMlintegr__6": addr "camlMlintegr__square_1010" int 3)
(data global "camlMlintegr__1" int 1277 "camlMlintegr__1": double 0.0)
(data global "camlMlintegr__2" int 1277 "camlMlintegr__2": double 0.0)
(data global "camlMlintegr__3" int 1277 "camlMlintegr__3": double 1.0)

(function camlMlintegr__square_1010 (x/1011: addr)
 (alloc 1277 (*f (load float64u x/1011) (load float64u x/1011))))

(function camlMlintegr__iter_1018
     (x/1019: addr s/1020: addr i/1021: int env/1038: addr)
 (if (> i/1021 1)
   (app "camlMlintegr__iter_1018"
     (alloc 1277
       (+f (load float64u s/1020)
         (let fun/1042 (load (+a env/1038 24))
           (load float64u (app (load fun/1042) x/1019 fun/1042 addr)))))
     (alloc 1277
       (+f (load float64u x/1019) (load float64u (load (+a env/1038 32)))))
     (+ i/1021 -2) env/1038 addr)
   (alloc 1277
     (*f (load float64u s/1020) (load float64u (load (+a env/1038 32)))))))

(function camlMlintegr__integr_1012
     (f/1013: addr low/1014: addr high/1015: addr n/1016: int)
 (let
   (h/1041
      (/f (-f (load float64u high/1015) (load float64u low/1014))
        (floatofint (>>s n/1016 1)))
    h/1017 (alloc 1277 h/1041)
    clos/1039
      (alloc 5367 "caml_curry3" 7 "camlMlintegr__iter_1018" f/1013 h/1017))
   (app "camlMlintegr__iter_1018" low/1014 "camlMlintegr__1" n/1016 clos/1039
     addr)))

(function camlMlintegr__test_1022 (n/1023: int)
 (app "camlMlintegr__integr_1012" (load "camlMlintegr") "camlMlintegr__2"
   "camlMlintegr__3" n/1023 addr))

(function camlMlintegr__entry ()
 (let square/1010 "camlMlintegr__6" (store "camlMlintegr" square/1010))
 (let integr/1012 "camlMlintegr__5"
   (store (+a "camlMlintegr" 8) integr/1012))
 (let test/1022 "camlMlintegr__4" (store (+a "camlMlintegr" 16) test/1022))
 (app "camlMlintegr__integr_1012" (load "camlMlintegr") "camlMlintegr__2"
   "camlMlintegr__3" 21 unit)
 1a)

(data)
(function caml_program ()
 (app "camlMlintegr__entry" unit)
 (**(store "caml_globals_inited" (+ (load "caml_globals_inited") 1))*) 1)

(function caml_curry4 (arg/1069: addr clos/1070: addr)
 (alloc 5367 "caml_curry4_1" 7 "caml_curry4_1_app" arg/1069 clos/1070))

(function caml_curry4_1_app
     (arg2/1071: addr arg3/1072: addr arg4/1073: addr clos/1070: addr)
 (let clos/1074 (load (+a clos/1070 32))
   (app (load (+a clos/1074 16)) (load (+a clos/1070 24)) arg2/1071 arg3/1072
     arg4/1073 clos/1074 addr)))

(function caml_curry4_1 (arg/1075: addr clos/1076: addr)
 (alloc 5367 "caml_curry4_2" 5 "caml_curry4_2_app" arg/1075 clos/1076))

(function caml_curry4_2_app (arg3/1077: addr arg4/1078: addr clos/1076: addr)
 (let (clos/1079 (load (+a clos/1076 32)) clos/1080 (load (+a clos/1079 32)))
   (app (load (+a clos/1080 16)) (load (+a clos/1079 24))
     (load (+a clos/1076 24)) arg3/1077 arg4/1078 clos/1080 addr)))

(function caml_curry4_2 (arg/1081: addr clos/1082: addr)
 (alloc 4343 "caml_curry4_3" 3 arg/1081 clos/1082))

(function caml_curry4_3 (arg/1083: addr clos/1084: addr)
 (let
   (clos/1085 (load (+a clos/1084 24)) clos/1086 (load (+a clos/1085 32))
    clos/1087 (load (+a clos/1086 32)))
   (app (load (+a clos/1087 16)) (load (+a clos/1086 24))
     (load (+a clos/1085 24)) (load (+a clos/1084 16)) arg/1083 clos/1087
     addr)))

(function caml_curry3 (arg/1058: addr clos/1059: addr)
 (alloc 5367 "caml_curry3_1" 5 "caml_curry3_1_app" arg/1058 clos/1059))

(function caml_curry3_1_app (arg2/1060: addr arg3/1061: addr clos/1059: addr)
 (let clos/1062 (load (+a clos/1059 32))
   (app (load (+a clos/1062 16)) (load (+a clos/1059 24)) arg2/1060 arg3/1061
     clos/1062 addr)))

(function caml_curry3_1 (arg/1063: addr clos/1064: addr)
 (alloc 4343 "caml_curry3_2" 3 arg/1063 clos/1064))

(function caml_curry3_2 (arg/1065: addr clos/1066: addr)
 (let (clos/1067 (load (+a clos/1066 24)) clos/1068 (load (+a clos/1067 32)))
   (app (load (+a clos/1068 16)) (load (+a clos/1067 24))
     (load (+a clos/1066 16)) arg/1065 clos/1068 addr)))

